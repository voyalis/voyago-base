# kubernetes-manifests/auth-migration-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: auth-db-migration-job
  namespace: default # Veya ${{ env.K8S_NAMESPACE }}
  labels:
    app: voyago-authservice
    component: migration-job
spec:
  ttlSecondsAfterFinished: 300 # Başarılı Job'ı 5 dakika sonra sil
  backoffLimit: 2 # Başarısız olursa 2 kez daha dene (toplam 3 deneme)
  template:
    spec:
      restartPolicy: OnFailure # Veya Never
      # serviceAccountName: default # Veya özel bir SA
      containers:
      - name: migrate-auth-db-container
        # CI'da build edilen ve GHCR'ye pushlanan AuthService imajını kullanacağız.
        # Bu 'image:' alanı CI workflow'unda dinamik olarak set edilecek.
        image: placeholder-for-ci-image-replacement # Bu satır CI'da sed ile değiştirilecek
        imagePullPolicy: IfNotPresent # Veya Always
        workingDir: /app # Dockerfile'daki WORKDIR ile aynı
        command: ["/app/migrate"] # İmaj içindeki migrate CLI'ının yolu
        args:
          - "-path=/app/migrations" # İmaj içindeki migrations klasörünün yolu
          - "-database"
          - "postgres://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@postgres-auth-svc:5432/$(POSTGRES_DB)?sslmode=disable"
          - "up"
        envFrom: # Veritabanı credentials'larını ConfigMap ve Secret'tan al
          - configMapRef:
              name: postgres-auth-config # PostgreSQL ConfigMap'imizin adı
          - secretRef:
              name: postgres-auth-secret  # PostgreSQL Secret'ımızın adı